{"version":3,"sources":["components/AddCategorie.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","categorie","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC9BR,GAAc,SAAAS,GAAG,OAAGP,GAAH,mBAAkBO,OACnCN,EAAc,MAKd,SACC,uBACGO,KAAK,OACLC,MAAQT,EACRU,SApBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAebM,GAfa,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGtC,OACI,sBAAKc,UAAU,6CAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,4BAAKA,QCJHO,EAAW,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAGxB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WACNxB,EAASC,GAAWwB,MAAM,SAAAd,GAEtBY,EAAS,CACLf,KAAKG,EACLU,SAAS,SAKb,CAAEpB,IAGHqB,EDhB2BI,CAAczB,GAAlCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAGtB,OACI,qCACA,oBAAIJ,UAAU,wCAAd,SAAwDhB,IAExD,sBAAKgB,UAAU,YAAf,UAEII,GAAW,mBAAGJ,UAAU,mCAAb,0BAEPH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAEKA,GADEA,EAAIC,cEjBlBe,EAAe,WAGxB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAGA,OACI,qCACA,8CACA,cAAC,EAAD,CAAcA,cAAgBA,IAC/B,uBAEC,6BAEI0C,EAAWlB,KAAI,SAAAmB,GAAS,OAEZ,cAAC,EAAD,CAEA5B,SAAY4B,GADLA,YChB/BC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4543bd55.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategorie = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >2 ){\r\n        setCategories(cat=>[inputValue, ...cat]);\r\n        setinputValue('');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n         <input\r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n         />   \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategorie.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","export const getGifs = async ( category )=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=HP7lU2exMryxE9MaGBF8T82HsKFR4cN2`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n    })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n           <img src={ url } alt= { title } />\r\n           <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GiftGrid = ( { category } ) => {\r\n    \r\n    \r\n    const { data: images, loading } = useFetchGifs( category ); \r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInLeft\">{ category }</h3>\r\n\r\n        <div className=\"card-grid\">\r\n           \r\n          { loading && <p className=\"animate__animated animate__flash\">Cargando....</p>}\r\n              {\r\n                images.map(img=>(\r\n                    \r\n                    <GifGridItem \r\n                    key= { img.id }\r\n                    { ...img } />\r\n                ))\r\n              }  \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then( img =>{\r\n\r\n            setstate({\r\n                data:img,\r\n                loading: false\r\n            })\r\n        } )\r\n\r\n\r\n         }, [ category ])\r\n\r\n\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategorie } from './components/AddCategorie'\r\nimport { GiftGrid } from './components/GiftGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h1>GifExpertApp</h1>\r\n        <AddCategorie setCategories={ setCategories } />\r\n       <hr />  \r\n               \r\n        <ol>\r\n        {\r\n            categories.map(categorie=>(\r\n\r\n                        <GiftGrid\r\n                        key= { categorie }\r\n                        category= { categorie }\r\n                        />\r\n\r\n            ))\r\n\r\n        }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}